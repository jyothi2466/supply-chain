package com.supplier.mapper;

import com.supplier.entity.Inventory;
import com.supplier.entity.Offer;
import com.supplier.entity.StockLevel;
import com.supplier.entity.WarehouseProduct;
import com.supplier.model.InventoryModel;
import com.supplier.model.OfferModel;
import com.supplier.model.StockLevelModel;
import com.supplier.model.WarehouseProductModel;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2022-07-15T10:41:50+0530",
    comments = "version: 1.4.2.Final, compiler: javac, environment: Java 17.0.2 (Eclipse Adoptium)"
)
@Component
public class InventoryMapperImpl implements InventoryMapper {

    @Override
    public InventoryModel inventoryToModel(Inventory inventory) {
        if ( inventory == null ) {
            return null;
        }

        InventoryModel inventoryModel = new InventoryModel();

        inventoryModel.setInventoryGuid( inventory.getInventoryGuid() );
        inventoryModel.setInventoryDate( inventory.getInventoryDate() );
        inventoryModel.setInventoryType( inventory.getInventoryType() );
        inventoryModel.setTotalPrice( inventory.getTotalPrice() );
        inventoryModel.setTotalUnits( inventory.getTotalUnits() );

        return inventoryModel;
    }

    @Override
    public Inventory modelToInventory(InventoryModel inventoryModel) {
        if ( inventoryModel == null ) {
            return null;
        }

        Inventory inventory = new Inventory();

        inventory.setInventoryGuid( inventoryModel.getInventoryGuid() );
        inventory.setInventoryDate( inventoryModel.getInventoryDate() );
        inventory.setInventoryType( inventoryModel.getInventoryType() );
        inventory.setTotalPrice( inventoryModel.getTotalPrice() );
        inventory.setTotalUnits( inventoryModel.getTotalUnits() );

        return inventory;
    }

    @Override
    public WarehouseProduct modelToWarehouseProduct(WarehouseProductModel warehouseProductModel) {
        if ( warehouseProductModel == null ) {
            return null;
        }

        WarehouseProduct warehouseProduct = new WarehouseProduct();

        warehouseProduct.setWpGuid( warehouseProductModel.getWpGuid() );
        warehouseProduct.setAvailableQuantity( warehouseProductModel.getAvailableQuantity() );
        warehouseProduct.setExpiryDate( warehouseProductModel.getExpiryDate() );
        warehouseProduct.setManufactureDate( warehouseProductModel.getManufactureDate() );
        warehouseProduct.setProductGuid( warehouseProductModel.getProductGuid() );
        warehouseProduct.setPtr( warehouseProductModel.getPtr() );
        warehouseProduct.setUnitPrice( warehouseProductModel.getUnitPrice() );
        warehouseProduct.setUpdateDate( warehouseProductModel.getUpdateDate() );

        return warehouseProduct;
    }

    @Override
    public WarehouseProductModel warehouseProductToModel(WarehouseProduct warehouseProduct) {
        if ( warehouseProduct == null ) {
            return null;
        }

        WarehouseProductModel warehouseProductModel = new WarehouseProductModel();

        warehouseProductModel.setAvailableQuantity( warehouseProduct.getAvailableQuantity() );
        warehouseProductModel.setExpiryDate( warehouseProduct.getExpiryDate() );
        warehouseProductModel.setManufactureDate( warehouseProduct.getManufactureDate() );
        warehouseProductModel.setProductGuid( warehouseProduct.getProductGuid() );
        warehouseProductModel.setPtr( warehouseProduct.getPtr() );
        warehouseProductModel.setUnitPrice( warehouseProduct.getUnitPrice() );
        warehouseProductModel.setUpdateDate( warehouseProduct.getUpdateDate() );
        warehouseProductModel.setWpGuid( warehouseProduct.getWpGuid() );

        return warehouseProductModel;
    }

    @Override
    public OfferModel offerToModel(Offer offer) {
        if ( offer == null ) {
            return null;
        }

        OfferModel offerModel = new OfferModel();

        offerModel.setDescription( offer.getDescription() );
        offerModel.setEndDate( offer.getEndDate() );
        offerModel.setOfferGuid( offer.getOfferGuid() );
        offerModel.setPercentage( offer.getPercentage() );
        offerModel.setStartDate( offer.getStartDate() );

        return offerModel;
    }

    @Override
    public Offer modelToOffer(OfferModel offerModel) {
        if ( offerModel == null ) {
            return null;
        }

        Offer offer = new Offer();

        offer.setDescription( offerModel.getDescription() );
        offer.setEndDate( offerModel.getEndDate() );
        offer.setOfferGuid( offerModel.getOfferGuid() );
        offer.setPercentage( offerModel.getPercentage() );
        offer.setStartDate( offerModel.getStartDate() );

        return offer;
    }

    @Override
    public StockLevelModel stockLevelToModel(StockLevel stockLevel) {
        if ( stockLevel == null ) {
            return null;
        }

        StockLevelModel stockLevelModel = new StockLevelModel();

        stockLevelModel.setStockLevelGuid( stockLevel.getStockLevelGuid() );
        stockLevelModel.setBufferStock( stockLevel.getBufferStock() );
        stockLevelModel.setMaxStock( stockLevel.getMaxStock() );
        stockLevelModel.setReorderStock( stockLevel.getReorderStock() );

        return stockLevelModel;
    }

    @Override
    public StockLevel modelToStockLevel(StockLevelModel stockLevelModel) {
        if ( stockLevelModel == null ) {
            return null;
        }

        StockLevel stockLevel = new StockLevel();

        stockLevel.setStockLevelGuid( stockLevelModel.getStockLevelGuid() );
        stockLevel.setBufferStock( stockLevelModel.getBufferStock() );
        stockLevel.setMaxStock( stockLevelModel.getMaxStock() );
        stockLevel.setReorderStock( stockLevelModel.getReorderStock() );

        return stockLevel;
    }
}
